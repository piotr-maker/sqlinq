name: CMake on multiple platforms

on:
  push:
    branches: [ "master", "feature/*", "ci/*" ]
  pull_request:
    branches: [ "master" ]

jobs:
  linux:
    name: Build & Test (Linux)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        c_compiler: [gcc, clang]
        include:
          - c_compiler: gcc
            cpp_compiler: g++
          - c_compiler: clang
            cpp_compiler: clang++
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake git libsqlite3-dev libmysqlclient-dev
      - name: Configure
        run: >
          cmake -B build
          -DSQLINQ_USE_MYSQL=ON
          -DSQLINQ_BUILD_TESTS=ON
          -DSQLINQ_ENABLE_SANITIZERS=ON
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=Debug
          -S ${{ github.workspace }}
      - name: Build
        run: cmake --build build --parallel
      - name: Test
        run: ctest --test-dir build --output-on-failure
    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: passwd
          MYSQL_DATABASE: personnel
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    env:
      SQLINQ_MYSQL_HOST: 127.0.0.1
      SQLINQ_MYSQL_USER: root
      SQLINQ_MYSQL_PASSWORD: passwd
      SQLINQ_MYSQL_DATABASE: personnel
      SQLINQ_SQLITE_DATABASE: ":memory:"

  macos:
    name: Build & Test (macOS)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          brew update
          brew install cmake sqlite
      - name: Configure
        run: >
          cmake -B build
          -DSQLINQ_BUILD_TESTS=ON
          -DCMAKE_BUILD_TYPE=Debug
          -S ${{ github.workspace }}
      - name: Build
        run: cmake --build build --parallel
      - name: Test
        run: ctest --test-dir build --output-on-failure
    env:
      SQLINQ_SQLITE_DATABASE: ":memory:"

  windows:
    name: Build & Test (Windows)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
          choco install sqlite -y
      - name: Configure
        run: >
          cmake -B build
          -DSQLINQ_BUILD_TESTS=ON
          -DCMAKE_BUILD_TYPE=Debug
          -S ${{ github.workspace }}
      - name: Build
        run: cmake --build build --parallel --config Debug
      - name: Test
        run: ctest --test-dir build --output-on-failure -C Debug
    env:
      SQLINQ_SQLITE_DATABASE: ":memory:"

